"""Problem 1 
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000."""
def multiples():
	sums = []
	for i in xrange(1000):
		if i % 3 == 0 or i % 5 == 0:
			sums.append(i)
	return sum(sums)

"""Problem 2 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."""
def fibonacci():
	x, y = 1, 1
	even_num_sum = 0 
	while x <= 4000000:
		if x % 2 ==0:
			even_num_sum += x
		x, y = y, x+y
	return even_num_sum 

"""Problem 3
The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143?"""
def largest_prime_factor():
	num = 600851475143
	i = 2
	while i * i < num:
		while num % i == 0:
			num = num / i
		i = i + 1 
	return num

"""Problem 4
Find the largest palindrome made from the product of two 3-digit numbers."""
def palindrome_check(num):
	return str(num) == str(num)[::-1]
def largest_palindrome():
	x = 0
	for i in range(100, 1000):
		for y in range(100, 1000):
			if palindrome_check(i*y): 
				if i*y > x:
					x = i*y
	return x

"""Problem 5
What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?"""
divisors = [x for x in xrange(1, 21)]
def divisible(): 
	for num in xrange(2520, 999999999, 2520):
		if all(num % i == 0 for i in divisors):
			return num
	return None





